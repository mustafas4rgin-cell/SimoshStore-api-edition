@model UserListViewModel

@{
    ViewData["Title"] = "User List";
}

<div class="container-fluid">
    <h1 class="mt-4">User List</h1>

    <!-- User Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title">Users</h5>
        </div>
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Role</th>
                        <th>Enabled</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td>
                            <td>@user.Email</td>
                            <td>@user.Phone</td>
                            <td>@user.RoleId</td>
                            <td>@(user.Enabled ? "Enabled" : "Disabled")</td>
                            <td>
                                <a href="@Url.Action("UpdateUser", "User", new { id = user.Id })" class="btn btn-warning btn-sm">Edit</a>
                                <a href="@Url.Action("Delete", "Admin", new { id = user.Id })" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this user?')">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination Controls -->
    <div class="d-flex justify-content-center">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("UserList", "Admin", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Math.Ceiling((double)Model.TotalUsersCount / Model.PageSize); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("ManageUsers", "Admin", new { page = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Math.Ceiling((double)Model.TotalUsersCount / Model.PageSize))
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("ManageUsers", "Admin", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
                </li>
            }
        </ul>
    </div>
</div>
